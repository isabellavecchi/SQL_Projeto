--																			TRIGGER

CREATE TABLE aulas.tb_empregados(
	nome 		VARCHAR(64)		CONSTRAINT nn_nome		NOT NULL,
	salario		NUMERIC(7,2)		CONSTRAINT nn_salario	NOT NULL
);


CREATE TABLE aulas.tb_empregados_auditoria(
    operacao	CHAR			CONSTRAINT nn_operacao	NOT NULL,
    usuario	VARCHAR(64)	CONSTRAINT nn_usuario	NOT NULL,
    dt_hr		TIMESTAMP		CONSTRAINT nn_dt_hr		NOT NULL,
    nome		VARCHAR(64)	CONSTRAINT nn_nome		NOT NULL,
    salario		NUMERIC(7,2)	
);


--	INSERINDO VALORES
INSERT INTO aulas.tb_empregados VALUES ('joao', 34);
INSERT INTO aulas.tb_empregados VALUES ('maria', 68);
INSERT INTO aulas.tb_empregados VALUES ('etevaldo', 57);
INSERT INTO aulas.tb_empregados VALUES ('josefana', 25);

SELECT * FROM aulas.tb_empregados;


--	CRIANDO TRIGGER
CREATE TRIGGER tg_empregado_auditoria
AFTER INSERT OR UPDATE OR DELETE ON aulas.tb_empregados
FOR EACH ROW EXECUTE PROCEDURE aulas.fn_empregado_auditoria();

--OBS.:NAO tem como dar CREATE OR REPLACE. Só o DROP TRIGGER

--	CRIANDO A FUNÇÃO fn_empregado_auditoria
CREATE OR REPLACE FUNCTION aulas.fn_empregado_auditoria()
RETURNS trigger AS
$$
	BEGIN
    		IF(tg_op = 'DELETE') THEN
        	    INSERT INTO aulas.tb_empregados_auditoria
        	    SELECT 'E', user, now(), OLD.*;
        	    RETURN OLD;
        	ELSIF(tg_op = 'UPDATE') THEN
        	    INSERT INTO aulas.tb_empregados_auditoria
           	    SELECT 'A', user, now(),OLD.*;
        	    INSERT INTO aulas.tb_empregados_auditoria
        	    SELECT 'A', user, now(),NEW.*;
        	    RETURN NEW;
        	ELSIF(tg_op = 'INSERT') THEN
        	    INSERT INTO aulas.tb_empregados_auditoria
        	    SELECT 'I', user, now(),NEW.*;
        	    RETURN NEW;
        	END IF;
        	RETURN NULL;
	END
$$
LANGUAGE plpgsql


--	TESTANDO
INSERT INTO aulas.tb_empregados VALUES ('francisco', 22.5);
INSERT INTO aulas.tb_empregados VALUES ('seu pai', 37.6); 
INSERT INTO aulas.tb_empregados VALUES ('baby shark', 22.2);

UPDATE aulas.tb_empregados SET nome='dart vader' WHERE nome='seu pai';

SELECT * FROM aulas.tb_empregados_auditoria;
SELECT * FROM aulas.tb_empregados;
